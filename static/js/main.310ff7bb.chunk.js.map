{"version":3,"sources":["redux/actions/userActions.js","redux/types.js","components/reusable/ReusableButton.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/reducers/userReducer.js","redux/store.js","components/PostScream.js","redux/actions/dataActions.js","components/Notifications.js","components/Navbar.js","components/EditUserDetails.js","components/Profile.js","components/DeleteScream.js","components/reusable/CommentButton.js","components/reusable/LikeButton.js","components/CommentFom.js","components/Comments.js","components/ScreamDetails.js","components/Scream.js","pages/home.js","pages/login.js","pages/signup.js","util/AuthRoute.js","components/StaticProfile.js","pages/user.js","App.js","util/theme.js","serviceWorker.js","index.js","images/icon.png"],"names":["logout","dispatch","localStorage","removeItem","axios","defaults","headers","common","type","getUserData","get","then","res","payload","data","catch","err","console","log","setAuthorizationHeader","token","FBIdToken","setItem","ReusableButton","children","onClick","title","btnClasses","tipClasses","Tooltip","className","placement","IconButton","initialState","loading","screams","scream","userData","errors","intialState","authenticated","credentials","likes","notifications","middleware","thunk","reducers","combineReducers","state","action","allScreams","map","screamId","likeCount","userScreams","filter","commentCount","allUserScreams","comments","user","userHandle","handle","like","n","read","UI","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","useStyles","makeStyles","theme","spread","postScreamBtn","color","dialogBtns","margin","connect","postNewScream","post","response","classes","useState","body","setScream","open","setOpen","handleClose","useEffect","Add","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","name","id","label","placeholder","onChange","e","target","value","multiline","error","helperText","DialogActions","Button","variant","button","disabled","CircularProgress","circularProgress","markNotificationsRead","notificationsIds","anchorEl","setAnchorEl","unreadNotificationsCount","length","notificationsIcon","Badge","badgeContent","notificationsMarkup","verb","iconColor","icon","Favorite","Chat","time","moment","createdAt","fromNow","MenuItem","component","Link","to","recipient","Typography","style","marginLeft","sender","aria-owns","undefined","aria-haspopup","currentTarget","Menu","Boolean","onEntered","notificationId","bar","flexDirection","padding","img","width","AppBar","Toolbar","tooltip","display","editUserDetails","userDetails","bio","location","website","setUserDetails","handleSubmit","preventDefault","handleChange","Edit","fullWidt","onSubmit","row","uploadImage","formData","imageUrl","imageInput","useRef","detailedPorfile","Paper","paper","profile","src","alt","ref","image","files","FormData","append","hidden","current","click","LocationOn","href","rel","CalendarToday","dayjs","format","nonAuthenticatedProfile","p","align","buttons","deleteButton","position","left","deleteScream","delete","props","toggleOpen","DeleteOutline","likeScream","unlikeScream","nonAuthenticatedLikeBtn","FavoriteBorder","likedButton","unlikedButton","find","commentBtn","submitComment","comment","setComment","borderRadius","commentBody","textAlign","fontSize","visibleSeperator","borderBottom","commentList","index","userImage","Grid","container","item","sm","spacing","utc","calendar","expand","top","height","dialog","dialogContent","close","marginRight","imgGrid","contentGrid","progressContainer","objectFit","invisibleSeperator","visibility","getScream","openDialog","oldPath","newPath","paths","setPaths","handleOpen","pathname","history","pushState","DialogMarkup","size","thickness","UnfoldMore","Close","card","marginBottom","content","minWidth","Card","CardMedia","CardContent","getScreams","lg","xs","key","loginUser","loginData","push","email","password","setLoginData","general","form","AppIcon","pageTitle","noValidate","textField","customError","small","signup","signupData","confirmPassword","setSignupData","Component","rest","screamsContainer","flexWrap","justifyContent","noScreamsContainer","screamList","typography","loginMessage","marginTop","getUserProfile","match","params","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","userNextVariants","alignItems","verticalAlign","border","cursor","jwtDecode","exp","Date","now","App","exact","path","Home","Signup","Login","User","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.310ff7bb.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    LOADING_USER,\r\n    SET_ERRORS,\r\n    SET_UNAUTHENTICATED,\r\n    SET_USER,\r\n    MARK_NOTIFICATIONS_READ\r\n} from './../types';\r\n\r\n//login action creator\r\nexport const loginUser = (loginData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    \r\n    axios.post('/signin', loginData)\r\n        .then(res => {\r\n            setAuthorizationHeader(res.data.token);\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push('/');\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response && err.response.data\r\n            });\r\n        });\r\n}\r\n\r\n//sign up action creator\r\nexport const signup = (signupData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n\r\n    axios.post('/signup', signupData)\r\n        .then(res => {\r\n            setAuthorizationHeader(res.data.token);\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push('/');\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response && err.response.data\r\n            });\r\n        });\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem('FBIdToken');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n}\r\n\r\nexport const getUserData = () => dispatch => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.get('/user')\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\nconst setAuthorizationHeader = (token) => {\r\n    let FBIdToken = `Bearer ${token}`;\r\n    localStorage.setItem('FBIdToken', FBIdToken);\r\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n}\r\n\r\n\r\nexport const editUserDetails = userDetails => dispatch => {\r\n    dispatch({ type: LOADING_USER });\r\n\r\n    axios.post('/user', userDetails)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n\r\n//upload image action creator\r\nexport const uploadImage = (formData) => dispatch => {\r\n    dispatch({ type: LOADING_USER });\r\n\r\n    axios.post('/user/image', formData)\r\n        .then(() => {\r\n            dispatch(getUserData())\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n//mark notifications read\r\nexport const markNotificationsRead = notificationsIds => dispatch => {\r\n    axios.post('/notifications', notificationsIds)\r\n    .then(() => {\r\n        dispatch({\r\n            type: MARK_NOTIFICATIONS_READ\r\n        })\r\n    })\r\n    .catch(err => console.log(err))\r\n}","//user reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATION_READ';\r\n\r\n//UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const STOP_LOADING = 'STOP_LOADING';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n\r\n//data reducer types\r\nexport const SET_SCREAMS = 'SET_SCRAMS';\r\nexport const SET_SCREAM = 'SET_SCREAM';\r\nexport const POST_SCREAM = 'POST_SCREAM';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\r\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\r\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\r\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';\r\nexport const SET_USER_DATA = 'SET_USER_DATA';\r\n","import { IconButton, Tooltip } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst ReusableButton = ({ children, onClick, title, btnClasses, tipClasses }) => {\r\n    return (\r\n        <Tooltip title={title} className={tipClasses} placement=\"top\">\r\n            <IconButton\r\n                onClick={onClick}\r\n                className={btnClasses}\r\n            >\r\n                {children}\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nexport default ReusableButton;\r\n","import {\r\n    DELETE_SCREAM,\r\n    LIKE_SCREAM,\r\n    LOADING_DATA,\r\n    POST_SCREAM, SET_SCREAM, SET_SCREAMS,\r\n    SUBMIT_COMMENT, UNLIKE_SCREAM, SET_USER_DATA\r\n} from './../types';\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    screams: [],\r\n    scream: {},\r\n    userData: {},\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_SCREAMS:\r\n            return {\r\n                ...state,\r\n                screams: action.payload,\r\n                loading: false,\r\n            }\r\n\r\n        case SET_SCREAM:\r\n            return {\r\n                ...state,\r\n                scream: action.payload,\r\n                loading: false\r\n            }\r\n\r\n        case LIKE_SCREAM:\r\n        case UNLIKE_SCREAM:\r\n            const allScreams = state.screams.map(scream => {\r\n                if (scream.screamId === action.payload.screamId) {\r\n                    return {\r\n                        ...scream,\r\n                        likeCount: action.payload.likeCount\r\n                    }\r\n                }\r\n                return scream;\r\n            });\r\n\r\n            const userScreams = state.userData.screams.map(scream => {\r\n                if (scream.screamId === action.payload.screamId) {\r\n                    return {\r\n                        ...scream, \r\n                        likeCount: action.payload.likeCount\r\n                    }\r\n                }\r\n                return scream;\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                screams: allScreams,\r\n                scream: {\r\n                    ...state.scream,\r\n                    likeCount: action.payload.likeCount\r\n                },\r\n                userData: {\r\n                    ...state.userData,\r\n                    screams: userScreams\r\n                }\r\n            }\r\n\r\n        case DELETE_SCREAM:\r\n            return {\r\n                ...state,\r\n                screams: state.screams.filter(scream => scream.screamId !== action.payload)\r\n            }\r\n\r\n        case POST_SCREAM:\r\n            return {\r\n                ...state,\r\n                screams: [\r\n                    action.payload,\r\n                    ...state.screams\r\n                ]\r\n            }\r\n\r\n        case SUBMIT_COMMENT:\r\n            const screams = state.screams.map(scream => {\r\n                if (scream.screamId === action.payload.screamId) {\r\n                    return {\r\n                        ...scream,\r\n                        commentCount: scream.commentCount + 1\r\n                    }\r\n                }\r\n                return scream;\r\n            })\r\n\r\n            const allUserScreams = state.userData.screams.map(scream => {\r\n                if (scream.screamId === action.payload.screamId) {\r\n                    return {\r\n                        ...scream,\r\n                        commentCount: scream.commentCount + 1\r\n                    }\r\n                }\r\n                return scream;\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                screams,\r\n                scream: {\r\n                    ...state.scream,\r\n                    commentCount: state.scream.commentCount + 1,\r\n                    comments: [action.payload, ...state.scream.comments]\r\n                },\r\n                userData: {\r\n                    ...state.userData,\r\n                    screams: allUserScreams\r\n                }\r\n            }\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userData: action.payload,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { CLEAR_ERRORS, LOADING_UI, SET_ERRORS, STOP_LOADING } from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: {}\r\n            }\r\n\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case STOP_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {\r\n    LIKE_SCREAM,\r\n    LOADING_USER,\r\n    SET_AUTHENTICATED,\r\n    SET_UNAUTHENTICATED,\r\n    SET_USER,\r\n    UNLIKE_SCREAM,\r\n    MARK_NOTIFICATIONS_READ\r\n} from './../types';\r\n\r\nconst intialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n    likes: [],\r\n    notifications: []\r\n};\r\n\r\nexport default (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true\r\n            }\r\n\r\n        case SET_UNAUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: false\r\n            }\r\n\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload,\r\n            }\r\n\r\n        case LIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    {\r\n                        userHandle: state.credentials.handle,\r\n                        screamId: action.payload.screamId\r\n                    }\r\n                ]\r\n            }\r\n\r\n        case UNLIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\r\n            }\r\n\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case MARK_NOTIFICATIONS_READ:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.map(n => ({ ...n, read: true }))\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\nimport userReducer from './reducers/userReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    data: dataReducer,\r\n    user: userReducer,\r\n    UI: uiReducer\r\n});\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware), \r\n        window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n    )\r\n);\r\n\r\nexport default store;","import {\r\n    Button,\r\n    CircularProgress, Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Add } from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { postNewScream } from '../redux/actions/dataActions';\r\nimport ReusableButton from './reusable/ReusableButton';\r\nimport store from '../redux/store';\r\nimport { CLEAR_ERRORS } from '../redux/types';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    ...theme.spread,\r\n    postScreamBtn: {\r\n        color: 'inherit'\r\n    },\r\n\r\n    dialogBtns: {\r\n        margin: '20px'\r\n    }\r\n}));\r\n\r\nconst PostScream = ({ postNewScream, UI: { loading, errors } }) => {\r\n    const classes = useStyles();\r\n\r\n    const [scream, setScream] = useState({ body: '' });\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        //restoring the empty scream body\r\n        setScream({ body: '' });\r\n        //dialog shouldn't remember the previous error after close and reopen\r\n        store.dispatch({ type: CLEAR_ERRORS });\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setScream({ body: e.target.value });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        postNewScream(scream);\r\n    }\r\n    //closing the dialog after successful posting\r\n    useEffect(() => {\r\n        if (scream.body && !loading) {\r\n            handleClose()\r\n        }\r\n    }, [loading]);\r\n\r\n    return (\r\n        <>\r\n            <ReusableButton\r\n                title=\"Post a Scream\"\r\n                tipClasses={classes.postScreamBtn}\r\n                onClick={handleOpen}\r\n            >\r\n                <Add />\r\n            </ReusableButton>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n            >\r\n                <DialogTitle>\r\n                    Post a Scream\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form>\r\n                        <TextField\r\n                            name=\"scream\"\r\n                            type=\"text\"\r\n                            id=\"scream\"\r\n                            label=\"Scream\"\r\n                            placeholder=\"Enter Your Scream\"\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            multiline\r\n                            error={errors && errors.body ? true : false}\r\n                            helperText={errors && errors.body ? errors.body : ''}\r\n                        />\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        className={`${classes.button} ${classes.dialogBtns}`}\r\n                        onClick={handleClose}\r\n                    >Cancel</Button>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        className={`${classes.button} ${classes.dialogBtns}`}\r\n                        type=\"submit\"\r\n                        onClick={handleSubmit}\r\n                        disabled={loading}\r\n                    >\r\n                        {loading ? <CircularProgress className={classes.circularProgress} /> : 'Post'}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nPostScream.propTypes = {\r\n    postScream: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, { postNewScream })(PostScream);","import axios from 'axios';\r\nimport {\r\n    CLEAR_ERRORS, DELETE_SCREAM,\r\n    LIKE_SCREAM,\r\n    LOADING_DATA,\r\n    LOADING_UI, POST_SCREAM,\r\n    SET_ERRORS, SET_SCREAM, SET_SCREAMS, SET_USER_DATA,\r\n    STOP_LOADING, SUBMIT_COMMENT, UNLIKE_SCREAM\r\n} from './../types';\r\n\r\n//Get All Screams\r\nexport const getScreams = () => dispatch => {\r\n    dispatch({ type: LOADING_DATA });\r\n\r\n    axios.get('/screams')\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: []\r\n            })\r\n        });\r\n}\r\n\r\nexport const getScream = screamId => dispatch => {\r\n    dispatch({ type: LOADING_UI });\r\n\r\n    axios.get(`/scream/${screamId}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_SCREAM,\r\n                payload: res.data\r\n            });\r\n\r\n            dispatch({ type: STOP_LOADING })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n//post a scream\r\nexport const postNewScream = scream => dispatch => {\r\n    dispatch({ type: LOADING_UI });\r\n\r\n    axios.post('/screams', scream)\r\n        .then(res => {\r\n            dispatch({\r\n                type: POST_SCREAM,\r\n                payload: res.data\r\n            })\r\n            dispatch({ type: CLEAR_ERRORS })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response && err.response.data\r\n            })\r\n        })\r\n}\r\n// like scream\r\nexport const likeScream = screamId => dispatch => {\r\n    axios.get(`/scream/${screamId}/like`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LIKE_SCREAM,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n//unlike scream\r\nexport const unlikeScream = screamId => dispatch => {\r\n    axios.get(`/scream/${screamId}/unlike`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: UNLIKE_SCREAM,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n//submit comment\r\nexport const submitComment = (screamId, comment) => dispatch => {\r\n    dispatch({\r\n        type: LOADING_UI\r\n    });\r\n\r\n    axios.post(`/scream/${screamId}/comment`, comment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SUBMIT_COMMENT,\r\n                payload: res.data\r\n            })\r\n\r\n            dispatch({\r\n                type: STOP_LOADING\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response && err.response.data\r\n            })\r\n        })\r\n}\r\n//delete scream\r\nexport const deleteScream = screamId => dispatch => {\r\n    axios.delete(`/scream/${screamId}`)\r\n        .then(() => {\r\n            dispatch({\r\n                type: DELETE_SCREAM,\r\n                payload: screamId\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n//get user data\r\nexport const getUserProfile = userHandle => dispatch => {\r\n    dispatch({\r\n        type: LOADING_DATA\r\n    });\r\n\r\n    axios.get(`/user/${userHandle}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_USER_DATA,\r\n                payload: res.data\r\n            });         \r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: SET_USER_DATA,\r\n                payload: []\r\n            })\r\n        });\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { markNotificationsRead } from '../redux/actions/userActions';\r\nimport { Notifications as NotificationsIcon, Favorite, Chat } from '@material-ui/icons';\r\nimport { Badge, Menu, MenuItem, Typography, Tooltip, IconButton } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Notifications = ({ markNotificationsRead, notifications }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleOpen = (e) => {\r\n        setAnchorEl(e.currentTarget)\r\n    }\r\n\r\n    const handleClose = (e) => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onMenuOpened = () => {\r\n        const notificationsIds = notifications.filter(n => !n.read).map(n => n.notificationId);\r\n        markNotificationsRead(notificationsIds);\r\n    }\r\n\r\n    const unreadNotificationsCount = notifications.filter(n => !n.read).length;\r\n    const notificationsIcon =\r\n        notifications && notifications.length > 0 && unreadNotificationsCount ?\r\n            <Badge badgeContent={unreadNotificationsCount} color=\"secondary\">\r\n                <NotificationsIcon color=\"default\" />\r\n            </Badge> :\r\n            <NotificationsIcon color=\"default\" />\r\n\r\n    const notificationsMarkup =\r\n        notifications && notifications.length ?\r\n            notifications.map(n => {\r\n                const verb = n.type === 'like' ? 'liked' : 'commented';\r\n                const iconColor = n.read ? 'primary' : 'secondary';\r\n                const icon = n.type === 'like' ? <Favorite color={iconColor} /> :\r\n                    <Chat color={iconColor} />\r\n                const time = moment(n.createdAt).fromNow();\r\n\r\n                return (\r\n                    <MenuItem\r\n                        onClick={handleClose}\r\n                        component={Link}\r\n                        to={`/users/${n.recipient}/scream/${n.screamId}`}\r\n                    >\r\n                        {icon}\r\n                        <Typography\r\n                            variant=\"body1\"\r\n                            style={{\r\n                                marginLeft: '10px'\r\n                            }}\r\n                        >\r\n                            {n.sender} {verb} your scream {time}\r\n                        </Typography>\r\n                    </MenuItem>\r\n                )\r\n            }) : <MenuItem>\r\n                You Have No Notififcations\r\n            </MenuItem>\r\n    return (\r\n        <>\r\n            <Tooltip placement=\"top\" title=\"Notifications\">\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleOpen}\r\n                >\r\n                    {notificationsIcon}\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                onEntered={onMenuOpened}\r\n            >\r\n                {notificationsMarkup}\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nNotifications.propTypes = {\r\n    notifications: PropTypes.array.isRequired,\r\n    markNotificationsRead: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    notifications: state.user.notifications\r\n})\r\n\r\nexport default connect(mapStateToProps, { markNotificationsRead })(Notifications);\r\n","\r\nimport { AppBar, Button, Toolbar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Home } from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from './../redux/actions/userActions';\r\nimport ReusableButton from './reusable/ReusableButton';\r\nimport PostScream from './PostScream';\r\nimport Notifications from './Notifications';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    ...theme.spread,\r\n    icon: {\r\n        color: '#fff'\r\n    },\r\n\r\n    bar: {\r\n        flexDirection: 'row',\r\n        padding: 5,\r\n        color: '#fff'\r\n    },\r\n    img: {\r\n        width: 80\r\n    }\r\n}));\r\n\r\nconst Navbar = ({ authenticated, logout }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar className={classes.bar}>\r\n            <Toolbar className=\"nav-container\">\r\n                {\r\n                    authenticated ? (\r\n                        <>\r\n                            <PostScream />\r\n                            <ReusableButton title=\"Home\">\r\n                                <Link to=\"/\">\r\n                                    <Home className={classes.icon} />\r\n                                </Link>\r\n                            </ReusableButton>\r\n\r\n                            <Notifications />\r\n\r\n                            <Button\r\n                                component={Link}\r\n                                to=\"/login\"\r\n                                onClick={logout}\r\n                                className={classes.icon}\r\n                            >Logout</Button>\r\n                        </>\r\n                    ) : (\r\n                            <>\r\n                                <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\r\n                                <Button color=\"inherit\" component={Link} to=\"/signup\">Signup</Button>\r\n                            </>\r\n                        )\r\n                }\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logout: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authenticated: state.user.authenticated\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import {\r\n    Button, Dialog, DialogActions, DialogContent,\r\n    DialogTitle, TextField\r\n} from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { Edit } from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editUserDetails } from '../redux/actions/userActions';\r\nimport ReusableButton from './reusable/ReusableButton';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    ...theme.spread,\r\n    tooltip: {\r\n        display: 'block',\r\n        margin: 'auto'\r\n    }\r\n}));\r\n\r\nconst EditUserDetails = ({ editUserDetails }) => {\r\n    const classes = useStyles();\r\n\r\n    const [userDetails, setUserDetails] = useState({\r\n        bio: '',\r\n        location: '',\r\n        website: ''\r\n    });\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        editUserDetails(userDetails);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setUserDetails({\r\n            ...userDetails,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <ReusableButton\r\n                title=\"Edit Details\"\r\n                tipClasses={classes.tooltip}\r\n                onClick={handleOpen}\r\n            >\r\n                <Edit color=\"primary\" />\r\n            </ReusableButton>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                fullWidt\r\n                maxWidth=\"sm\"\r\n            >\r\n                <DialogTitle>Edit Your details</DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            name=\"bio\"\r\n                            type=\"text\"\r\n                            label=\"Bio\"\r\n                            multiline\r\n                            row=\"3\"\r\n                            placeholder=\"A short bio about your self\"\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            name=\"location\"\r\n                            type=\"text\"\r\n                            label=\"Location\"\r\n                            placeholder=\"A short bio about your self\"\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            name=\"website\"\r\n                            type=\"text\"\r\n                            label=\"Website\"\r\n                            placeholder=\"A short bio about your self\"\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                        />\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={handleSubmit} color=\"secondary\">Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nEditUserDetails.propTypes = {\r\n    editUserDetails: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    credentials: state.user.credentials\r\n})\r\n\r\nexport default connect(mapStateToProps, { editUserDetails })(EditUserDetails);\r\n\r\n\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport EditUserDetails from './EditUserDetails';\r\n\r\nimport { Button, Typography, Paper, Link as MuiLink } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CalendarToday, Edit, LocationOn, Link as LinkIcon } from '@material-ui/icons';\r\nimport dayjs from 'dayjs';\r\nimport { uploadImage } from './../redux/actions/userActions';\r\nimport ReusableButton from './reusable/ReusableButton';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    ...theme.spread\r\n}));\r\n\r\nconst Profile = ({ user, uploadImage }) => {\r\n    const {\r\n        authenticated,\r\n        loading,\r\n        credentials: { handle, createdAt, imageUrl, bio, website, location }\r\n    } = user;\r\n\r\n    const classes = useStyles();\r\n\r\n    //creating image input ref\r\n    const imageInput = useRef();\r\n\r\n    const handleImageChange = (e) => {\r\n        const image = e.target.files[0];\r\n\r\n        const formData = new FormData();\r\n        formData.append('image', image, image.name);\r\n        uploadImage()\r\n    }\r\n\r\n    const handleEditPicture = () => {\r\n        imageInput.current.click();\r\n    }\r\n\r\n\r\n    const detailedPorfile =\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img className=\"profile-image\" src={imageUrl} alt=\"profile\" />\r\n                    <input\r\n                        type=\"file\"\r\n                        ref={imageInput}\r\n                        onChange={handleImageChange}\r\n                        hidden=\"hidden\"\r\n                    />\r\n                    <ReusableButton\r\n                        title=\"Edit Profile Picture\"\r\n                        btnClasses=\"button\"\r\n                        onClick={handleEditPicture}\r\n                    >\r\n                        <Edit color=\"primary\" />\r\n                    </ReusableButton>\r\n\r\n                </div>\r\n                <hr />\r\n                <div className=\"profile-details\">\r\n                    <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\r\n                        @{handle}\r\n                    </MuiLink>\r\n                    <hr />\r\n                    {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                    <hr />\r\n                    {location && (\r\n                        <>\r\n                            <LocationOn color=\"primary\"></LocationOn>\r\n                            <span>{location}</span>\r\n                            <hr />\r\n                        </>\r\n                    )}\r\n                    {website && (\r\n                        <>\r\n                            <LinkIcon color=\"primary\" />\r\n                            <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {' '} {website}\r\n                            </a>\r\n                            <hr />\r\n                        </>\r\n                    )}\r\n                    <CalendarToday color=\"primary\" />{' '}\r\n                    <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                </div>\r\n                <EditUserDetails />\r\n            </div>\r\n        </Paper>\r\n\r\n\r\n    const nonAuthenticatedProfile = <Paper className={classes.paper} p={3}>\r\n        <Typography variant=\"body2\" align=\"center\">\r\n            No profile found, Please login\r\n        </Typography>\r\n\r\n        <div className={classes.buttons} >\r\n            <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/login\">\r\n                Login\r\n            </Button>\r\n            <Typography component=\"p\">or</Typography>\r\n            <Button variant=\"contained\" color=\"secondary\" component={Link} to=\"/signup\">\r\n                Signup\r\n            </Button>\r\n        </div>\r\n    </Paper>\r\n\r\n    const profile = !loading ? (authenticated ? (detailedPorfile) : (nonAuthenticatedProfile))\r\n        : 'loading profile...';\r\n\r\n    return profile;\r\n}\r\n\r\nProfile.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    uploadImage: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps, { uploadImage })(Profile);\r\n\r\n","import React, { useState } from 'react';\r\nimport ReusableButton from './reusable/ReusableButton';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Dialog, DialogTitle, DialogActions } from '@material-ui/core';\r\nimport { makeStyles} from '@material-ui/core/styles'\r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport { deleteScream } from './../redux/actions/dataActions';\r\n\r\nconst useStyles = makeStyles({\r\n    deleteButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    }\r\n});\r\n\r\nconst DeleteScream = ({ screamId, ...props }) => {\r\n    const classes = useStyles();\r\n\r\n    const [open, toggleOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        toggleOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        toggleOpen(false);\r\n    }\r\n\r\n    const deleteScream = () => {\r\n        props.deleteScream(screamId);\r\n        toggleOpen(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ReusableButton\r\n                title=\"Delete Scream\"\r\n                onClick={handleOpen}\r\n                btnClasses={classes.deleteButton}\r\n            >\r\n                <DeleteOutline color=\"primary\" />\r\n            </ReusableButton>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n            >\r\n                <DialogTitle>\r\n                    Are you sure you want to delete this scream ?\r\n                </DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={deleteScream}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nDeleteScream.propTypes = {\r\n    deleteScream: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n})\r\nexport default connect(mapStateToProps, { deleteScream })(DeleteScream);","import { Chat } from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ReusableButton from './ReusableButton';\r\n\r\nconst CommentButton = ({ user: { authenticated } }) => {\r\n    const commentButton = !authenticated ?\r\n        <ReusableButton title=\"Comment Scream\">\r\n            <Link to=\"/login\">\r\n                <Chat color=\"primary\" />\r\n            </Link>\r\n        </ReusableButton> : <ReusableButton title=\"Comment Scream\">\r\n            <Chat color=\"primary\" />\r\n        </ReusableButton>\r\n\r\n    return commentButton;\r\n}\r\n\r\nCommentButton.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    handleClick: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(CommentButton)\r\n","import { Favorite, FavoriteBorder } from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { likeScream, unlikeScream } from '../../redux/actions/dataActions';\r\nimport ReusableButton from './ReusableButton';\r\n\r\nconst LikeButton = ({ user: { authenticated, likes }, likeScream, unlikeScream, screamId }) => {\r\n    const liked = () => {\r\n        if (likes && likes.find(like => like.screamId === screamId)) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const nonAuthenticatedLikeBtn = <ReusableButton title=\"like\" >\r\n        <Link to=\"/login\">\r\n            <FavoriteBorder color=\"primary\" />\r\n        </Link>\r\n    </ReusableButton>\r\n\r\n    const likedButton = <ReusableButton title=\"Undo Like\" onClick={() => unlikeScream(screamId)}>\r\n        <Favorite color=\"primary\" />\r\n    </ReusableButton>\r\n\r\n    const unlikedButton = <ReusableButton title=\"Like\" onClick={() => likeScream(screamId)}>\r\n        <FavoriteBorder color=\"primary\" />\r\n    </ReusableButton>\r\n\r\n    return (\r\n        !authenticated ? nonAuthenticatedLikeBtn :\r\n            (liked() ? likedButton : unlikedButton)\r\n    );\r\n}\r\n\r\nLikeButton.propTypes = {\r\n    likeScream: PropTypes.func.isRequired,\r\n    unlikeScream: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { likeScream, unlikeScream })(LikeButton); \r\n","import { Button, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { submitComment } from '../redux/actions/dataActions';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles= makeStyles(theme => ({\r\n    commentBtn: {\r\n        margin: '10px 0 20px'\r\n    }\r\n}))\r\n\r\nconst CommentFom = ({ screamId, errors, submitComment }) => {\r\n    const classes = useStyles();\r\n    const [comment, setComment] = useState({\r\n        body: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setComment({\r\n            body: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        submitComment(screamId, comment)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                type=\"text\"\r\n                name=\"comment\"\r\n                label=\"Comment Scream\"\r\n                onChange={handleChange}\r\n                error={errors && errors.comment ? true : false}\r\n                helperText={errors.comment}\r\n                fullWidth\r\n                multiline\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.commentBtn}\r\n            >\r\n                Comment\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.UI.errors\r\n})\r\nexport default connect(mapStateToProps, { submitComment })(CommentFom);\r\n","import { Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentFom from './CommentFom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    ...theme.spread,\r\n    img: {\r\n        width: '70px',\r\n        borderRadius: '50%'\r\n    },\r\n    commentBody: {\r\n        textAlign: 'left',\r\n        fontSize: 'medium'\r\n    },\r\n    visibleSeperator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid #eee' \r\n    }\r\n}));\r\n\r\nconst Comments = ({ comments, screamId, loading }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        !loading && \r\n        <>\r\n            <CommentFom screamId={screamId} />\r\n            <ul className={classes.commentList}>\r\n                {\r\n                    comments && comments.map((comment, index) => {\r\n                        const { body, createdAt, userImage, userHandle } = comment\r\n                        return (\r\n                            <>\r\n                                <Grid container>\r\n                                    <Grid item sm={2} spacing={2}>\r\n                                        <img src={userImage} alt=\"comment\" className={classes.img} />\r\n                                    </Grid>\r\n                                    <Grid item sm={9}>\r\n                                        <div className={classes.commentBody}>\r\n                                            <Typography\r\n                                                variant=\"h6\"\r\n                                                component={Link}\r\n                                                to={`/users/${userHandle}`}\r\n                                            >\r\n                                                @{userHandle}\r\n                                            </Typography>\r\n                                            <Typography\r\n                                                variant=\"body1\"\r\n                                                color=\"textSecondary\"\r\n                                            >\r\n                                                {moment.utc(createdAt).calendar()}\r\n                                            </Typography>\r\n                                            <Typography\r\n                                                variant=\"body1\"\r\n                                            >\r\n                                                {body}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {\r\n                                    index !== comments.length - 1 &&\r\n                                    <hr className={classes.visibleSeperator} />\r\n                                }\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nComments.propTypes = {\r\n    comments: PropTypes.array.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.UI.loading\r\n})\r\n\r\nexport default connect(mapStateToProps)(Comments);\r\n","import {\r\n    CircularProgress, Dialog,\r\n    DialogContent,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Close, UnfoldMore } from '@material-ui/icons';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getScream } from '../redux/actions/dataActions';\r\nimport Comments from './Comments';\r\nimport CommentButton from './reusable/CommentButton';\r\nimport LikeButton from './reusable/LikeButton';\r\nimport ReusableButton from './reusable/ReusableButton';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    ...theme.spread,\r\n    expand: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '70%',\r\n        height: '50px'\r\n    },\r\n    dialog: {\r\n        padding: '1rem',\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '1rem'\r\n    },\r\n    close: {\r\n        marginLeft: 'auto',\r\n        marginRight: '1rem',\r\n        borderRadius: '50%'\r\n    },\r\n    imgGrid: {\r\n        textAlign: 'center'\r\n    },\r\n    contentGrid: {\r\n        textAlign: 'left'\r\n    },\r\n    progressContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        textAlign: 'center'\r\n    },\r\n    img: {\r\n        width: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover'\r\n    },\r\n    likes: {\r\n        fontSize: 'medium',\r\n        marginLeft: '0.5rem'\r\n    },\r\n    invisibleSeperator: {\r\n        visibility: 'hidden'\r\n    }\r\n}));\r\n\r\nconst ScreamDetails = ({ getScream, scream, screamId, loading, openDialog, handle }) => {\r\n    const {\r\n        body,\r\n        userImage,\r\n        createdAt,\r\n        likeCount,\r\n        comments,\r\n        commentCount } = scream;\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [paths, setPaths] = useState({\r\n        oldPath: '',\r\n        newPath: ''\r\n    });\r\n\r\n    const handleOpen = () => {\r\n        const oldPath = window.location.pathname;\r\n        const newPath = `/users/${handle}/scream/${screamId}`;\r\n    \r\n        if(paths.oldPath === newPath){\r\n            setPaths({\r\n                ...paths,\r\n                oldPath: `/users/${handle}`\r\n            });\r\n        } \r\n\r\n        else {\r\n            setPaths({\r\n                oldPath,\r\n                newPath\r\n            });\r\n        }\r\n        //change path to the new one\r\n        window.history.pushState(null, null, newPath);\r\n        //open scream dialog\r\n        setOpen(true);\r\n        getScream(screamId);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        window.history.pushState(null, null, paths.oldPath)\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (openDialog) handleOpen();\r\n    }, []);\r\n\r\n    const DialogMarkup = loading ?\r\n        (\r\n            <div className={classes.progressContainer}>\r\n                <CircularProgress\r\n                    size={100}\r\n                    thickness={2}\r\n                    color=\"primary\"\r\n                />\r\n            </div>\r\n        ) :\r\n        (<Grid container spacing={2}>\r\n            <Grid item sm={5} className={classes.imgGrid}>\r\n                <img src={userImage} alt=\"profile\" className={classes.img} />\r\n            </Grid>\r\n            <Grid item sm={7} className={classes.contentGrid}>\r\n                <Typography\r\n                    component={Link}\r\n                    color=\"primary\"\r\n                    variant=\"h5\"\r\n                    to={`/users/${handle}`}\r\n                >\r\n                    @{handle}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {moment.utc(createdAt).calendar()}\r\n                </Typography>\r\n                <hr className={classes.invisibleSeperator} />\r\n                <Typography variant=\"body1\">{body}</Typography>\r\n                <LikeButton screamId={screamId} />\r\n                <span>{likeCount} likes</span>\r\n                <CommentButton />\r\n                <span>{commentCount} comments</span>\r\n            </Grid>\r\n        </Grid>)\r\n\r\n    return (\r\n        <>\r\n            <ReusableButton\r\n                title=\"Expand Scream\"\r\n                onClick={handleOpen}\r\n                tipClasses={classes.expand}\r\n            >\r\n                <UnfoldMore color=\"primary\" />\r\n            </ReusableButton>\r\n            <Dialog\r\n                className={classes.dialog}\r\n                open={open}\r\n                onClose={handleClose}\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n            >\r\n                <ReusableButton\r\n                    tipClasses={classes.close}\r\n                    title=\"close\"\r\n                    onClick={handleClose}\r\n                >\r\n                    <Close />\r\n                </ReusableButton>\r\n                <DialogContent className={classes.dialogContent}>\r\n                    {DialogMarkup}\r\n                    <Comments screamId={screamId} comments={comments} />\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nScreamDetails.propTypes = {\r\n    getScream: PropTypes.func.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    loaading: PropTypes.bool.isRequired,\r\n    handle: PropTypes.string.isRequired,\r\n    openDialog: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.UI.loading,\r\n    scream: state.data.scream\r\n});\r\n\r\nexport default connect(mapStateToProps, { getScream })(ScreamDetails);\r\n","import { Card, CardContent, CardMedia, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport DeleteScream from './DeleteScream';\r\nimport CommentButton from './reusable/CommentButton';\r\nimport LikeButton from './reusable/LikeButton';\r\nimport ScreamDetails from './ScreamDetails';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n        position: 'relative'\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    }\r\n});\r\n\r\nconst Scream = ({ user: { credentials, authenticated }, scream, openDialog }) => {\r\n    const {\r\n        body,\r\n        createdAt,\r\n        userImage,\r\n        userHandle,\r\n        screamId,\r\n        likeCount,\r\n        commentCount\r\n    } = scream;\r\n\r\n    const classes = useStyles();\r\n\r\n    const deleteButton = authenticated && (userHandle === credentials.handle) ?\r\n        <DeleteScream screamId={screamId} /> : null\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia\r\n                image={userImage}\r\n                title=\"profile image\"\r\n                className={classes.image}\r\n            />\r\n            <CardContent className={classes.content}>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    color=\"primary\"\r\n                    component={Link}\r\n                    to={`/users/${userHandle}`}\r\n                >{userHandle}</Typography>\r\n                {deleteButton}\r\n\r\n                <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\">\r\n                    {moment.utc(createdAt).calendar()}\r\n                </Typography>\r\n\r\n                <Typography variant=\"body1\">{body}</Typography>\r\n                <LikeButton screamId={screamId} />\r\n                <span>{likeCount} likes</span>\r\n                <CommentButton />\r\n                <span>{commentCount} comments</span>\r\n            </CardContent>\r\n\r\n            <ScreamDetails screamId={screamId} handle={userHandle} openDialog={openDialog} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nScream.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    openDialog: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(Scream);","import { Grid } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport Scream from '../components/Scream';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getScreams } from '../redux/actions/dataActions';\r\n\r\n\r\nconst Home = ({ getScreams, data: { screams, loading } }) => {\r\n    useEffect(() => {\r\n        getScreams();\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item lg={8} xs={12}>\r\n                {\r\n                    !loading ?\r\n                        screams.map(scream => {\r\n                            return (\r\n                                <Scream key={scream.screamId} scream={scream} />\r\n                            )\r\n                        }) : 'Loading...'\r\n                }\r\n            </Grid>\r\n            <Grid item lg={4} xs={12} >\r\n                <Profile />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nHome.propTypes = {\r\n    getScreams: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps, { getScreams })(Home);\r\n","\r\nimport { Button, CircularProgress, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport AppIcon from './../images/icon.png';\r\nimport { loginUser } from './../redux/actions/userActions';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    ...theme.spread\r\n}));\r\n\r\nconst Login = ({ loginUser, history, UI: { loading, errors } }) => {\r\n    const classes = useStyles();\r\n    const [loginData, setLoginData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setLoginData({\r\n            ...loginData,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        loginUser(loginData, history);\r\n    }\r\n\r\n    const { email, password, general } = errors;\r\n    return (\r\n        <Grid container className={classes.form}>\r\n            <Grid item sm />\r\n            <Grid item sm>\r\n                <img src={AppIcon} alt=\"thunder\" className={classes.img} />\r\n                <Typography variant=\"h5\" className={classes.pageTitle}>Login</Typography>\r\n                <form noValidate onSubmit={handleSubmit} >\r\n                    <TextField\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                        helperText={email}\r\n                        error={email ? true : false}\r\n                        fullWidth\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                        helperText={password}\r\n                        error={password ? true : false}\r\n                        fullWidth\r\n                    />\r\n                    {\r\n                        general &&\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            className={classes.customError}\r\n                        >\r\n                            {general}\r\n                        </Typography>\r\n                    }\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={loading}\r\n                    >\r\n                        {loading ? <CircularProgress className={classes.circularProgress} /> : 'Login'}\r\n                    </Button>\r\n                    <small className={classes.small}>\r\n                        don't have an account? sign up <Link to=\"/signup\">here</Link>\r\n                    </small>\r\n                </form>\r\n            </Grid>\r\n            <Grid item sm />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        UI: state.UI\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","\r\nimport { Button, CircularProgress, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { signup } from '../redux/actions/userActions';\r\nimport AppIcon from './../images/icon.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    ...theme.spread\r\n}));\r\n\r\n\r\nconst Signup = ({ signup, history, UI: { loading, errors } }) => {\r\n    const classes = useStyles();\r\n\r\n    const [signupData, setSignupData] = useState({\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        handle: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setSignupData({\r\n            ...signupData,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        signup(signupData, history);\r\n    }\r\n\r\n    const { general, email, password, confirmPassword, handle } = errors;\r\n\r\n    return (\r\n        <Grid container className={classes.form}>\r\n            <Grid item sm />\r\n            <Grid item sm>\r\n                <img src={AppIcon} alt=\"thunder\" className={classes.img} />\r\n                <Typography variant=\"h5\" className={classes.pageTitle}>Signup</Typography>\r\n                <form noValidate onSubmit={handleSubmit} >\r\n                    <TextField\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                        helperText={email}\r\n                        error={email ? true : false}\r\n                        fullWidth\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                        helperText={password}\r\n                        error={password ? true : false}\r\n                        fullWidth\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"confirmPassword\"\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        label=\"Confirm Password\"\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                        helperText={confirmPassword}\r\n                        error={confirmPassword ? true : false}\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        id=\"handle\"\r\n                        type=\"text\"\r\n                        name=\"handle\"\r\n                        label=\"Handle\"\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                        helperText={handle}\r\n                        error={handle ? true : false}\r\n                        fullWidth\r\n                    />\r\n                    {\r\n                        general &&\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            className={classes.customError}\r\n                        >\r\n                            {general}\r\n                        </Typography>\r\n                    }\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={loading}\r\n                    >\r\n                        {loading ? <CircularProgress className={classes.circularProgress} /> : 'Signup'}\r\n                    </Button>\r\n                    <small className={classes.small}>\r\n                        Already have an account? login <Link to=\"/login\">here</Link>\r\n                    </small>\r\n                </form>\r\n            </Grid>\r\n            <Grid item sm />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nSignup.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    signup: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route, BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => {\r\n    return (\r\n        <Route\r\n            component={props => authenticated ? <Redirect to=\"/\" /> : <Component {...props} />}\r\n            {...rest}\r\n        />\r\n    )\r\n}\r\n\r\nAuthRoute.propTypes = {\r\n    authenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    authenticated: state.user.authenticated\r\n});\r\nexport default connect(mapStateToProps)(AuthRoute);","import React from 'react'\r\nimport { Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as MuiLink, Typography } from '@material-ui/core';\r\nimport { Link as LinkIcon, LocationOn, CalendarToday } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    ...theme.spread\r\n}));\r\n\r\nconst StaticProfile = ({ userDetails }) => {\r\n    const classes = useStyles();\r\n    const { handle, location, bio, website, imageUrl, createdAt } = userDetails;\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={imageUrl} alt=\"profile\" className=\"profile-image\" />\r\n                </div>\r\n                <div className=\"profile-details\">\r\n                    <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h6\">\r\n                        @{handle}\r\n                    </MuiLink>\r\n                    {bio && <Typography variant=\"body1\">{bio}</Typography>}\r\n                    <hr />\r\n                    {\r\n                        location &&\r\n                        <>\r\n                            <LocationOn color=\"primary\" />\r\n                            <span color=\"primary\">{location}</span>\r\n                            <hr />\r\n                        </>\r\n                    }\r\n                    {\r\n                        website &&\r\n                        <>\r\n                            <LinkIcon color=\"primary\" />\r\n                            <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {website}\r\n                            </a>\r\n                            <hr />\r\n                        </>\r\n                    }\r\n                    {\r\n                        <>\r\n                            <CalendarToday color=\"primary\" />{' '}\r\n                            <span variant=\"body1\">\r\n                                Joined {moment(createdAt).format('MMM, YYYY')}\r\n                            </span>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Paper >\r\n    )\r\n}\r\n\r\nStaticProfile.propTypes = {\r\n    userDetails: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const userDetails = state.data.userData.user;\r\n    return {\r\n        userDetails: userDetails ? userDetails : {}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StaticProfile)","import { Grid, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Scream from '../components/Scream';\r\nimport { getUserProfile } from '../redux/actions/dataActions';\r\nimport StaticProfile from '../components/StaticProfile';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    screamsContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between'\r\n    },\r\n    noScreamsContainer: {\r\n        margin: '50px auto'\r\n    },\r\n    screamList: {\r\n        width: '100%'\r\n    },\r\n    typography: {\r\n        margin: '20px 0 0'\r\n    },\r\n    loginMessage: {\r\n        width: '100%',\r\n        height: '100%',\r\n        textAlign: 'center',\r\n        marginTop: '20%',\r\n    }\r\n})\r\n\r\nconst User = ({ getUserProfile, screams, loading, authenticated, ...props }) => {\r\n    const classes = useStyles();\r\n    const userHandle = props.match.params.handle;\r\n    const screamId = props.match.params.screamId || null;\r\n\r\n    useEffect(() => {\r\n        getUserProfile(userHandle)\r\n    }, []);\r\n    console.log(loading, authenticated)\r\n    return (\r\n        authenticated ?\r\n            (!loading ?\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} lg={7}>\r\n                        <div className={classes.screamsContainer}>\r\n                            {\r\n                                screams.length ?\r\n                                    <>\r\n                                        <Typography color=\"primary\" className={classes.typography}>\r\n                                            All {userHandle} Screams\r\n                                    </Typography>\r\n                                        <Typography color=\"primary\" className={classes.typography}>\r\n                                            {screams.length}{' '}{screams.length === 1 ? 'scream' : 'screams'}\r\n                                        </Typography>\r\n                                    </> :\r\n                                    <Typography className={classes.noScreamsContainer}>\r\n                                        No screams by this user\r\n                                </Typography>\r\n                            }\r\n\r\n                            <ul className={classes.screamList}>\r\n                                {\r\n                                    screams.map(scream => {\r\n                                        return scream.screamId !== screamId ?\r\n                                            <Scream key={scream.screamId} scream={scream} /> :\r\n                                            <Scream key={scream.screamId} scream={scream} openDialog />\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={5}>\r\n                        <StaticProfile />\r\n                    </Grid>\r\n                </Grid> : 'Loading Profile...') : (\r\n                <Typography className={classes.loginMessage}>\r\n                    Please <Link to=\"/login\">login</Link> to see this user profile and activity\r\n                </Typography>)\r\n    )\r\n}\r\n\r\nUser.propTypes = {\r\n    getUserProfile: PropTypes.func.isRequired,\r\n    screams: PropTypes.array.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const screams = state.data.userData.screams;\r\n    return {\r\n        screams: screams || [],\r\n        loading: state.data.loading,\r\n        authenticated: state.user.authenticated\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { getUserProfile })(User);","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './pages/home';\nimport Login from './pages/login';\nimport Signup from './pages/signup';\nimport { getUserData, logout } from './redux/actions/userActions';\nimport store from './redux/store';\n//redux\nimport AuthRoute from './util/AuthRoute';\nimport themeFile from './util/theme';\nimport User from './pages/user';\nimport { SET_AUTHENTICATED } from './redux/types';\n\nconst theme = createMuiTheme(themeFile);\n\nconst token = localStorage.FBIdToken;\n\nif (token) {\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  } else {\n    store.dispatch(logout());\n    window.location.href = \"/login\"\n  }\n}\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <BrowserRouter >\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <AuthRoute exact path=\"/signup\" component={Signup} />\n              <AuthRoute exact path=\"/login\" component={Login} />\n              <Route exact path=\"/users/:handle\" component={User} />\n              <Route exact path=\"/users/:handle/scream/:screamId\" component={User} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    </MuiThemeProvider>\n  );\n};\n\n\nexport default App;\n","export default {\r\n  palette: {\r\n    primary: {\r\n      light: '#039be5',\r\n      main: '#01579b',\r\n      dark: '#b22a00',\r\n      contrastText: '#fff'\r\n    },\r\n    secondary: {\r\n      main: '#f50057',\r\n      contrastText: '#fff'\r\n    }\r\n  },\r\n  spread: {\r\n    typography: {\r\n      userNextVariants: true\r\n    },\r\n    form: {\r\n      textAlign: 'center',\r\n    },\r\n    img: {\r\n      maxWidth: 60,\r\n      margin: '1.5rem auto 5px'\r\n    },\r\n    textField: {\r\n      margin: 20\r\n    },\r\n    button: {\r\n      marginTop: 16,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      margin: 'auto',\r\n      width: 90,\r\n      height: 50\r\n    },\r\n    customError: {\r\n      color: '#FF0000',\r\n      fontSize: '0.7rem'\r\n    },\r\n    small: {\r\n      display: 'block',\r\n      marginTop: '1rem'\r\n    },\r\n    circularProgress: {\r\n      color: '#fff',\r\n      position: 'absolute'\r\n    },\r\n    paper: {\r\n      padding: 20\r\n    },\r\n    profile: {\r\n      '& .image-wrapper': {\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        '& button': {\r\n          position: 'absolute',\r\n          top: '80%',\r\n          left: '70%'\r\n        }\r\n      },\r\n      '& .profile-image': {\r\n        width: 200,\r\n        height: 200,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n      },\r\n      '& .profile-details': {\r\n        textAlign: 'center',\r\n        '& span, svg': {\r\n          verticalAlign: 'middle'\r\n        },\r\n        '& a': {\r\n          color: '#00bcd4'\r\n        }\r\n      },\r\n      '& hr': {\r\n        border: 'none',\r\n        margin: '0 0 10px 0'\r\n      },\r\n      '& svg.button': {\r\n        '&:hover': {\r\n          cursor: 'pointer'\r\n        }\r\n      }\r\n    },\r\n    buttons: {\r\n      textAlign: 'center',\r\n      '& a': {\r\n        margin: '20px 10px'\r\n      }\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n// \"homepage\": \"https://chat-app-ebabf.web.app/\",","module.exports = __webpack_public_path__ + \"static/media/icon.bb5d4fa1.png\";"],"sourceRoot":""}